{"version":3,"sources":["types/user.ts","searchInArray.ts","hooks/usePaginationSortableDataWithSearch.ts","store/action-creators/user.ts","hooks/useTypedSelector.ts","components/TablePaginator.tsx","components/UserDescription.tsx","elements/Input.tsx","components/AddUser.tsx","components/SearchUsers.tsx","components/Navbar.tsx","components/Th.tsx","App.tsx","hooks/useActions.ts","store/reducers/userReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["UserListSize","UserLink","UserActionTypes","SortDirection","searchInArray","array","value","found","findInObj","obj","Object","values","some","v","indexOf","isNaN","forEach","push","fetchUsersShort","dispatch","a","type","FETCH_USERS","size","SHORT","fetch","then","response","json","data","FETCH_USERS_SUCCESS","payload","catch","e","FETCH_USERS_ERROR","fetchUsersLong","LONG","searchUser","query","getState","users","user","SEARCH_USER","addUser","ADD_USER","useTypedSelector","useSelector","TablePaginator","rowsPerPageOptions","page","count","rowsPerPage","onChangePage","onChangeRowsPerPage","range","from","to","step","i","handleMoveLeft","preventDefault","handleMoveRight","className","Math","min","data-bs-toggle","aria-expanded","map","item","key","onClick","href","totalPages","ceil","totalNumbers","startPage","max","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","fetchPageNumbers","pageNum","aria-label","aria-hidden","newPage","UserDescription","firstName","lastName","description","address","streetAddress","city","state","zip","Input","name","label","onChange","error","helperText","id","placeholder","initialValues","email","phone","validationSchema","yup","typeError","required","positive","moreThan","integer","matches","AddUser","addUserEvent","React","useState","isExpanded","setExpanded","useCollapse","getCollapseProps","getToggleProps","formik","useFormik","validateOnChange","onSubmit","prevExpanded","handleSubmit","htmlFor","touched","Boolean","errors","handleChange","SearchUser","searchInputChange","searchInputSend","currentTarget","disabled","Navbar","children","data-bs-target","aria-controls","Link","active","Th","desc","showSort","scope","App","loading","selectedUser","setSelectedUser","useDispatch","bindActionCreators","UserActionCreators","useActions","items","config","sortConfig","setSortConfig","currentPage","setCurrentPage","currentRowsPerPage","setCurrentRowsPerPage","currentQuery","setCurrentQuery","sortedItems","useMemo","sortableItems","sort","b","direction","ASC","requestSort","DESC","paginatedItems","slice","requestChangePage","requestChangeRowsPerPage","newRowsPerPage","requestChangeQuery","newQuery","length","usePaginationSortableDataWithSearch","useEffect","role","event","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0efe82e7.chunk.js","sourcesContent":["export type User = {\n    id: number,\n        firstName: string,\n        lastName: string,\n        email: string,\n        phone: string,\n        address?: {\n        streetAddress: string,\n            city: string,\n            state: string,\n            zip: string\n    },\n    description?: string\n}\n\nexport enum UserListSize {\n    SHORT = \"SHORT\",\n    LONG = \"LONG\"\n}\n\nexport enum UserLink {\n    SHORT = \"http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\",\n    LONG = \"http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\"\n}\n\nexport enum UserActionTypes {\n    FETCH_USERS = \"FETCH_USERS\",\n    FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\",\n    FETCH_USERS_ERROR = \"FETCH_USERS_ERROR\",\n    ADD_USER = \"ADD_USER\",\n    SEARCH_USER = \"SEARCH_USER\"\n}\n\nexport interface UserState {\n    users: User[]\n    loading: boolean\n    error: string | null\n    size: UserListSize | null\n}\n\ninterface FetchUsersAction {\n    type: UserActionTypes.FETCH_USERS\n    size: UserListSize\n}\n\ninterface FetchUsersSuccessAction {\n    type: UserActionTypes.FETCH_USERS_SUCCESS\n    payload: User[]\n    size: UserListSize\n}\n\ninterface FetchUsersErrorAction {\n    type: UserActionTypes.FETCH_USERS_ERROR\n    payload: string\n}\n\ninterface AddUserAction {\n    type: UserActionTypes.ADD_USER\n    payload: User\n}\n\ninterface SearchUsersAction {\n    type: UserActionTypes.SEARCH_USER,\n    payload: User[]\n}\n\nexport type UserAction = FetchUsersAction | FetchUsersErrorAction | FetchUsersSuccessAction | AddUserAction | SearchUsersAction","export const searchInArray = (array: any[], value: string) => {\n    const found: any[] = [];\n\n    // Helper to search obj for value\n    const findInObj = (obj: any, value: any): any => {\n        return Object.values(obj).some(\n            v =>\n                // If v is an object, call recursively\n                typeof v == 'object' ? findInObj(v, value) :\n                    // If string, check if value is part of v\n                    typeof v == 'string'? v.indexOf(value) >= 0 :\n                        // Check numbers, make NaN == NaN\n                        typeof v == 'number'? v === value || isNaN(v) && isNaN(value):\n                            // Otherwise look for strict equality: null, undefined, function, boolean\n                            v === value\n        );\n    };\n\n    array.forEach(function(obj) {\n        if (findInObj(obj, value)) found.push(obj);\n    })\n    return found;\n}","import React from \"react\";\nimport {searchInArray} from \"../searchInArray\";\n\nexport enum SortDirection {\n    DESC = \"DESC\",\n    ASC = \"ASC\"\n}\n\ninterface Config {\n    key: string,\n    direction: SortDirection\n}\n\nexport const usePaginationSortableDataWithSearch = (items: any[],\n                                                    config: Config | null = null,\n                                                    page: number = 1,\n                                                    rowsPerPage: number = 20,\n                                                    query: string | null = null)  => {\n    const [sortConfig, setSortConfig] = React.useState(config);\n    \n    const [currentPage, setCurrentPage] = React.useState(page)\n    \n    const [currentRowsPerPage, setCurrentRowsPerPage] = React.useState(rowsPerPage)\n\n    const [currentQuery, setCurrentQuery] = React.useState(query)\n\n    const sortedItems = React.useMemo(() => {\n        let sortableItems = [...items]\n        if (sortConfig !== null) {\n            sortableItems.sort((a, b) => {\n                if (a[sortConfig.key] === b[sortConfig.key]) return 0\n                return a[sortConfig.key] < b[sortConfig.key] ?\n                    sortConfig.direction === SortDirection.ASC ? -1 : 1\n                    :\n                    sortConfig.direction === SortDirection.ASC ? 1 : -1\n            })\n        }\n        return sortableItems\n    }, [items, sortConfig])\n\n    const requestSort = (key: string) => {\n        let direction: SortDirection = SortDirection.ASC\n        if (sortConfig && sortConfig.key === key && sortConfig.direction === SortDirection.ASC) {\n            direction = SortDirection.DESC\n        }\n        setSortConfig({ key, direction })\n    }\n\n    const paginatedItems = React.useMemo(() => {\n        return sortedItems.slice(currentPage*currentRowsPerPage-currentRowsPerPage, currentPage*currentRowsPerPage-currentRowsPerPage+currentRowsPerPage)\n    }, [sortedItems, currentPage, currentRowsPerPage])\n    \n    const requestChangePage = (newPage: number) => {\n        setCurrentPage(newPage)\n    }\n\n    const requestChangeRowsPerPage = (newRowsPerPage: number) => {\n        setCurrentRowsPerPage(newRowsPerPage)\n    }\n\n    const queriedItems = React.useMemo(() => {\n        if(!currentQuery) return paginatedItems\n        return searchInArray(paginatedItems, currentQuery)\n    }, [paginatedItems, currentQuery])\n\n    const requestChangeQuery = (newQuery: string) => {\n        setCurrentQuery(newQuery)\n    }\n\n    return {\n        items: queriedItems,\n        requestSort, sortConfig,\n        requestChangePage,\n        requestChangeRowsPerPage,\n        requestChangeQuery,\n        page: currentPage,\n        count: items.length,\n        rowsPerPage: currentRowsPerPage\n    }\n}","import {Dispatch} from \"redux\";\nimport {User, UserAction, UserActionTypes, UserLink, UserListSize} from \"../../types/user\";\nimport {RootState} from \"../reducers\";\nimport {searchInArray} from \"../../searchInArray\";\n\nexport const fetchUsersShort = () => {\n    return async (dispatch: Dispatch<UserAction>) => {\n        dispatch({type: UserActionTypes.FETCH_USERS, size: UserListSize.SHORT})\n        fetch(UserLink.SHORT)\n            .then((response) => {\n                return response.json()\n            })\n            .then((data) => {\n                dispatch({type: UserActionTypes.FETCH_USERS_SUCCESS, payload: data, size: UserListSize.SHORT})\n            })\n            .catch(e => {\n                dispatch({\n                    type: UserActionTypes.FETCH_USERS_ERROR,\n                    payload: \"Произошла оишбка при загрузке пользователей\"\n                })\n            })\n    }\n}\n\nexport const fetchUsersLong = () => {\n    return async (dispatch: Dispatch<UserAction>) => {\n        dispatch({type: UserActionTypes.FETCH_USERS, size: UserListSize.LONG})\n        fetch(UserLink.LONG)\n            .then((response) => {\n                return response.json()\n            })\n            .then((data) => {\n                dispatch({type: UserActionTypes.FETCH_USERS_SUCCESS, payload: data, size: UserListSize.LONG})\n            })\n            .catch(e => {\n                dispatch({\n                    type: UserActionTypes.FETCH_USERS_ERROR,\n                    payload: \"Произошла оишбка при загрузке пользователей\"\n                })\n            })\n    }\n}\n\nexport const searchUser = (query: string) => (dispatch: Dispatch<UserAction>, getState: () => RootState) => {\n    const {users} = getState().user\n    dispatch({\n        type: UserActionTypes.SEARCH_USER,\n        payload: searchInArray(users, query)\n    })\n}\n\nexport const addUser = (user: User) => {\n    return {\n        type: UserActionTypes.ADD_USER,\n        payload: user\n    }\n}","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\nimport {RootState} from \"../store/reducers\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import React from \"react\";\n\ninterface TablePaginatorProps {\n    rowsPerPageOptions: number[]\n    count: number\n    page: number\n    rowsPerPage: number\n    onChangePage: (newPage: number) => void\n    onChangeRowsPerPage: (newRowsPerPage: number) => void\n}\n\nexport const TablePaginator: React.FC<TablePaginatorProps> = ({\n                                                                  rowsPerPageOptions,\n                                                                  page,\n                                                                  count,\n                                                                  rowsPerPage,\n                                                                  onChangePage,\n                                                                  onChangeRowsPerPage}) => {\n    const range = (from: number, to: number, step = 1) => {\n        let i = from;\n        const range = [];\n\n        while (i <= to) {\n            range.push(i);\n            i += step;\n        }\n\n        return range;\n    }\n\n    const fetchPageNumbers = () => {\n        const totalPages = Math.ceil(count/rowsPerPage)\n\n        /**\n         * totalNumbers: кол-во кнопок с номерами страниц\n         * totalBlocks: общее кол-во кнопок, в т.ч. стрел очкиобщее кол-во кнопок, в т.ч. стрел очки\n         */\n        const totalNumbers = 5\n        const totalBlocks = totalNumbers + 2\n\n        if (totalPages > totalBlocks) {\n            const startPage = Math.max(2, page - 1);\n            const endPage = Math.min(totalPages - 1, page + 1);\n            let pages = range(startPage, endPage);\n\n            /**\n             * hasLeftSpill: имеются ли скрытые страницы слева\n             * hasRightSpill: имеются ли скрытые страницы справа\n             * spillOffset: скрытые страницы справа или слева\n             */\n            const hasLeftSpill = startPage > 2;\n            const hasRightSpill = (totalPages - endPage) > 1;\n            const spillOffset = totalNumbers - (totalPages + 1);\n\n            switch (true) {\n                // handle: (1) < {5 6} [7] {8 9} (10)\n                case (hasLeftSpill && !hasRightSpill): {\n                    const extraPages = range(startPage - spillOffset, startPage - 1);\n                    pages = [-1, ...extraPages, ...pages];\n                    break;\n                }\n\n                // handle: (1) {2 3} [4] {5 6} > (10)\n                case (!hasLeftSpill && hasRightSpill): {\n                    const extraPages = range(endPage + 1, endPage + spillOffset);\n                    pages = [...pages, ...extraPages, -5];\n                    break;\n                }\n\n                // handle: (1) < {4 5} [6] {7 8} > (10)\n                case (hasLeftSpill && hasRightSpill):\n                default: {\n                    pages = [-1, ...pages, -5];\n                    break;\n                }\n            }\n\n            return [1, ...pages, totalPages]\n        }\n        return range(1, totalPages)\n    }\n\n    const handleClick = (newPage: number) => (e: React.MouseEvent) => {\n        e.preventDefault()\n        onChangePage(newPage)\n    }\n\n    const handleMoveLeft = (e: React.MouseEvent) => {\n        e.preventDefault();\n        onChangePage(page - 1)\n    }\n\n    const handleMoveRight = (e: React.MouseEvent) => {\n        e.preventDefault();\n        onChangePage(page + 1)\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row align-items-center row-cols-auto\">\n                    <div className=\"col\"><p className=\"mb-0\">Записи с {page*rowsPerPage-rowsPerPage+1} по {Math.min(page*rowsPerPage, count)} из {count}.</p></div>\n                    <div className=\"col\"><p className=\"mb-0\">Записей на страницу:</p></div>\n                    <div className=\"col\">\n                        <div className=\"btn-group\">\n                            <button type=\"button\" className=\"btn dropdown-toggle\" data-bs-toggle=\"dropdown\"\n                                    aria-expanded=\"false\">\n                                {rowsPerPage}\n                            </button>\n                            <ul className=\"dropdown-menu\">\n                                {rowsPerPageOptions.map((item, key) =>\n                                    <li key={key} onClick={() => onChangeRowsPerPage(item)}>\n                                        <a className=\"dropdown-item\" href=\"#\">\n                                            {item}\n                                        </a>\n                                    </li>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <nav>\n                            <ul className=\"pagination mb-0\">\n                                {fetchPageNumbers().map((pageNum, key) => {\n                                        if(pageNum === -1) return (\n                                            <li className=\"page-item\" key={key}>\n                                                <a onClick={handleMoveLeft}\n                                                   className=\"page-link\"\n                                                   aria-label=\"Previous\"\n                                                   href=\"#\"\n                                                >\n                                                    <span aria-hidden=\"true\">&laquo;</span>\n                                                </a>\n                                            </li>\n                                        )\n                                        if(pageNum === -5) return (\n                                            <li className=\"page-item\" key={key}>\n                                                <a onClick={handleMoveRight}\n                                                   className=\"page-link\"\n                                                   aria-label=\"Next\"\n                                                   href=\"#\"\n                                                >\n                                                    <span aria-hidden=\"true\">&raquo;</span>\n                                                </a>\n                                            </li>\n                                        )\n                                        return (\n                                            <li className={`page-item ${pageNum === page ? 'active' : \"\"}`} key={key}>\n                                                <a onClick={handleClick(pageNum)}\n                                                   className=\"page-link\"\n                                                   href=\"#\"\n                                                >{pageNum}</a>\n                                            </li>\n                                        )\n                                    }\n                                )}\n\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}","import React from \"react\";\nimport {User} from \"../types/user\";\n\ninterface UserDescriptionProps {\n    user: User\n}\n\nexport const UserDescription: React.FC<UserDescriptionProps> = ({ user }) => {\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <p>Выбран пользователь <strong>{user.firstName} {user.lastName}</strong></p>\n                <p>Описание:</p>\n                <textarea className=\"form-control\" value={user.description} />\n                <p>Адрес проживания: <strong>{user.address ? user.address.streetAddress : \"-\"}</strong></p>\n                <p>Город: <strong>{user.address ? user.address.city : \"-\"}</strong></p>\n                <p>Провинция/штат: <strong>{user.address ? user.address.state : \"-\"}</strong></p>\n                <p>Индекс: <strong>{user.address ? user.address.zip : \"-\"}</strong></p>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {Field} from \"formik\";\n\ninterface InputProps {\n    name: string\n    label?: string\n    value: string | number\n    onChange?: (e: React.FormEvent<HTMLInputElement>) => void\n    error?: boolean\n    helperText?: string\n    type?: \"text\" | \"password\"\n}\n\nexport const Input: React.FC<InputProps> = ({\n    name,\n    label,\n    value,\n    onChange,\n    error = false,\n    helperText,\n    type = \"text\"\n                                }) => {\n    return (\n        <>\n            <input type={type}\n                   className={`form-control ${error ? 'is-invalid' : ''}`}\n                   id={name}\n                   name={name}\n                   onChange={onChange}\n                   value={value}\n                   placeholder={label}\n            />\n            <div className=\"invalid-feedback\">\n                {helperText}\n            </div>\n        </>\n    )\n}","import React from \"react\";\nimport {User} from \"../types/user\";\nimport useCollapse from 'react-collapsed';\nimport {\n    useFormik\n} from \"formik\";\nimport * as yup from 'yup';\nimport {Input} from \"../elements/Input\";\n\ninterface AddUserProps {\n    addUserEvent: (user: User) => void\n}\n\nconst initialValues: User = {email: \"\", id: 0, lastName: \"\", phone: \"\", firstName: \"\" };\n\nconst validationSchema = yup.object({\n    id: yup.number()\n        .typeError('Но-но! ID - число.')\n        .required(\"Но-но! ID обязательное поле.\")\n        .positive(\"Но-но! Ну как ID может быть отрицательным?\")\n        .moreThan(0, \"Но-но! ID не может быть нулевым.\")\n        .integer(\"Но-но! ID - это число.\"),\n    firstName: yup.string()\n        .required(\"Но-но! Имя обязательное поле.\")\n        .matches(/^\\s*\\S+\\s*$/, \"Но-но! Введите имя без пробелов.\"),\n    lastName: yup.string()\n        .required(\"Но-но! Фамилия обязательное поле.\")\n        .matches(/^\\s*\\S+\\s*$/, \"Но-но! Введите фамилию без пробелов.\"),\n    email: yup.string()\n        .required('Но-но! Поле E-Mail обязательное.')\n        .email('Но-но! Введите верный E-Mail.'),\n    phone: yup.string()\n        .required('Но-но! Поле телефон обязательное.')\n        .matches(/^\\(?([0-9]{3})\\)([0-9]{3})-([0-9]{4})$/ , 'Но-но! Телефон должен быть в формате (ХХХ)ХХХ-ХХХХ.')\n});\n\nexport const AddUser: React.FC<AddUserProps> = ({ addUserEvent }) => {\n\n    const [isExpanded, setExpanded] = React.useState(false);\n\n    const { getCollapseProps, getToggleProps } = useCollapse()\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema: validationSchema,\n        validateOnChange: true,\n        onSubmit: (values) => {\n            addUserEvent(values)\n            setExpanded(false)\n        },\n    });\n\n    return (\n        <div className=\"mb-4\">\n            <div className=\"row justify-content-end align-items-center row-cols-auto\">\n                <div className=\"col\">\n                    <button {...getToggleProps({\n                        onClick: () => setExpanded((prevExpanded) => !prevExpanded),\n                    })}\n                            className=\"btn btn-success\">\n                        {isExpanded ? 'Закрыть' : 'Добавить'}\n                    </button>\n                </div>\n            </div>\n            <div {...getCollapseProps()}>\n                <div className=\"card card-body mt-4\">\n                    <form onSubmit={formik.handleSubmit}>\n                        <div className=\"mb-3 row\">\n                            <label htmlFor=\"id\" className=\"col-sm-2 col-form-label\">ID</label>\n                            <div className=\"col-sm-10\">\n                                <Input name=\"id\"\n                                       value={formik.values.id}\n                                       error={formik.touched.id && Boolean(formik.errors.id)}\n                                       helperText={formik.errors.id}\n                                       onChange={formik.handleChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"mb-3 row\">\n                            <label htmlFor=\"firstName\" className=\"col-sm-2 col-form-label\">Имя</label>\n                            <div className=\"col-sm-10\">\n                                <Input name=\"firstName\"\n                                       value={formik.values.firstName}\n                                       error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n                                       helperText={formik.errors.firstName}\n                                       onChange={formik.handleChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"mb-3 row\">\n                            <label htmlFor=\"lastName\" className=\"col-sm-2 col-form-label\">Фамилия</label>\n                            <div className=\"col-sm-10\">\n                                <Input name=\"lastName\"\n                                       value={formik.values.lastName}\n                                       error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n                                       helperText={formik.errors.lastName}\n                                       onChange={formik.handleChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"mb-3 row\">\n                            <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">E-Mail</label>\n                            <div className=\"col-sm-10\">\n                                <Input name=\"email\"\n                                       value={formik.values.email}\n                                       error={formik.touched.email && Boolean(formik.errors.email)}\n                                       helperText={formik.errors.email}\n                                       onChange={formik.handleChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"mb-3 row\">\n                            <label htmlFor=\"phone\" className=\"col-sm-2 col-form-label\">Телефон</label>\n                            <div className=\"col-sm-10\">\n                                <Input name=\"phone\"\n                                       value={formik.values.phone}\n                                       error={formik.touched.phone && Boolean(formik.errors.phone)}\n                                       helperText={formik.errors.phone}\n                                       onChange={formik.handleChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <label className=\"col-sm-2 col-form-label\"/>\n                            <div className=\"col-sm-10\">\n                                <button className=\"btn btn-success\" type=\"submit\">Добавить</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {\n    useFormik\n} from \"formik\";\nimport {Input} from \"../elements/Input\";\n\ninterface SearchUsersProps {\n    searchInputChange: (query: string) => void\n    searchInputSend: (query: string) => void\n}\n\ninterface SearchFormType {\n    query: string\n}\n\nconst initialValues: SearchFormType = {query: \"\"};\n\nexport const SearchUser: React.FC<SearchUsersProps> = ({ searchInputChange, searchInputSend }) => {\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: (values) => {\n            searchInputSend(values.query)\n        },\n    });\n\n    const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n        formik.handleChange(e)\n        searchInputChange(e.currentTarget.value)\n    }\n\n    return (\n        <form onSubmit={formik.handleSubmit} className=\"input-group mb-0\">\n            <Input name=\"query\"\n                   value={formik.values.query}\n                   onChange={handleChange}\n                   error={formik.touched.query && Boolean(formik.errors.query)}\n                   helperText={formik.errors.query}\n                   label=\"Поиск\"\n            />\n            <button disabled={formik.values.query === \"\" || !!formik.errors.query} type=\"submit\" className=\"btn btn-primary\">\n                Найти\n            </button>\n        </form>\n    )\n}","import {UserListSize} from \"../types/user\";\nimport React from \"react\";\n\nexport const Navbar: React.FC = ({ children }) => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container container-lg container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">Тестовое задание Future</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        {children}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\ninterface LinkProps {\n    active: boolean,\n    name: string,\n    onClick: React.MouseEventHandler\n}\n\nexport const Link: React.FC<LinkProps> = ({ active, name, onClick }) => {\n    return (\n        <li className=\"nav-item\">\n            <a className={`nav-link${active ? ' active' :''}`}\n               href=\"#\"\n               onClick={onClick}\n            >\n                {name}\n            </a>\n        </li>\n    )\n}","import React from \"react\";\nimport {SortDirection} from \"../hooks/usePaginationSortableDataWithSearch\";\n\ninterface ThProps {\n    onClick: React.MouseEventHandler\n    showSort: boolean\n    desc: boolean\n}\n\nexport const Th: React.FC<ThProps> = ({ onClick, children, desc, showSort }) => {\n    return (\n        <th scope=\"col\" onClick={onClick}>\n            {children}\n            {showSort ? desc ?\n                    <i className=\"bi bi-caret-down-fill\"/>\n                    :\n                    <i className=\"bi bi-caret-up-fill\"/>\n                : \"\"\n            }\n        </th>\n    )\n}","import React from \"react\";\nimport {useActions} from \"./hooks/useActions\";\nimport {useTypedSelector} from \"./hooks/useTypedSelector\";\nimport {TablePaginator} from \"./components/TablePaginator\";\nimport {User, UserListSize} from \"./types/user\";\nimport {UserDescription} from \"./components/UserDescription\";\nimport {AddUser} from \"./components/AddUser\";\nimport {SortDirection, usePaginationSortableDataWithSearch} from \"./hooks/usePaginationSortableDataWithSearch\";\nimport {SearchUser} from \"./components/SearchUsers\";\nimport {Link, Navbar} from \"./components/Navbar\";\nimport {Th} from \"./components/Th\";\n\nexport const App: React.FC = () => {\n\n    const {users, loading, error, size } = useTypedSelector(state => state.user)\n\n    const [selectedUser, setSelectedUser] = React.useState<User>()\n\n    const handleUserSelect = (user: User) => (event: React.MouseEvent) => {\n        event.preventDefault()\n        setSelectedUser(user)\n    }\n\n    const {fetchUsersShort, fetchUsersLong, addUser, searchUser} = useActions()\n\n    const {\n        items,\n        requestSort,\n        sortConfig,\n        count,\n        requestChangeQuery,\n        requestChangeRowsPerPage,\n        page,\n        rowsPerPage,\n        requestChangePage\n    } = usePaginationSortableDataWithSearch(\n        users\n        )\n\n    React.useEffect(() => {\n        requestChangePage(1)\n    }, [users, rowsPerPage])\n\n    React.useEffect(() => {\n        fetchUsersShort()\n    }, [])\n\n    const handleFetchUsersShortClick = (e: React.MouseEvent) => {\n        e.preventDefault()\n        fetchUsersShort()\n    }\n\n    const handleFetchUsersLongClick = (e: React.MouseEvent) => {\n        e.preventDefault()\n        fetchUsersLong()\n    }\n\n    const handleAddUser = (user: User) => {\n        addUser(user)\n    }\n\n    // TODO: РЕФАКТОРИИИИИНГ!!!!!!\n\n    return (\n        <div className=\"app\">\n            <Navbar>\n                <Link active={size === UserListSize.SHORT}\n                      name=\"Маленький набор данных\"\n                      onClick={handleFetchUsersShortClick}\n                />\n                <Link active={size === UserListSize.LONG}\n                      name=\"Большой набор данных\"\n                      onClick={handleFetchUsersLongClick}\n                />\n            </Navbar>\n            <div className=\"container container-lg container-fluid mt-4\">\n                <AddUser addUserEvent={handleAddUser}/>\n                <div className=\"row justify-content-between align-items-center row-cols-auto\">\n                    <div className=\"col\">\n                        <SearchUser searchInputChange={requestChangeQuery} searchInputSend={searchUser}/>\n                    </div>\n                    <div className=\"col\">\n                        <TablePaginator rowsPerPageOptions={[5,20,50]}\n                                        count={count}\n                                        page={page}\n                                        rowsPerPage={rowsPerPage}\n                                        onChangePage={requestChangePage}\n                                        onChangeRowsPerPage={requestChangeRowsPerPage}\n                        />\n                    </div>\n                </div>\n                <table className=\"table table-hover table-bordered mt-4\">\n                    {error && <h3>{error}</h3>}\n                    {loading && <div className=\"spinner-border m-3\" role=\"status\"><span className=\"visually-hidden\">Loading...</span></div>}\n                    <thead>\n                    <tr>\n                        <Th onClick={() => requestSort(\"id\")}\n                            showSort={sortConfig?.key === \"id\"}\n                            desc={sortConfig?.direction === SortDirection.DESC}\n                        >\n                            ID\n                        </Th>\n                        <Th onClick={() => requestSort(\"firstName\")}\n                            showSort={sortConfig?.key === \"firstName\"}\n                            desc={sortConfig?.direction === SortDirection.DESC}\n                        >\n                            Имя\n                        </Th>\n                        <Th onClick={() => requestSort(\"lastName\")}\n                            showSort={sortConfig?.key === \"lastName\"}\n                            desc={sortConfig?.direction === SortDirection.DESC}\n                        >\n                            Фамилия\n                        </Th>\n                        <Th onClick={() => requestSort(\"email\")}\n                            showSort={sortConfig?.key === \"email\"}\n                            desc={sortConfig?.direction === SortDirection.DESC}\n                        >\n                            E-Mail\n                        </Th>\n                        <Th onClick={() => requestSort(\"phone\")}\n                            showSort={sortConfig?.key === \"phone\"}\n                            desc={sortConfig?.direction === SortDirection.DESC}\n                        >\n                            Телефон\n                        </Th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {items.map((item, key) =>\n                        <tr key={key}\n                            onClick={handleUserSelect(item)}\n                            className={selectedUser === item ? 'table-active' : ''}>\n                            <th scope=\"row\">{item.id}</th>\n                            <td>{item.firstName}</td>\n                            <td>{item.lastName}</td>\n                            <td>{item.email}</td>\n                            <td>{item.phone}</td>\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n                {selectedUser && <UserDescription user={selectedUser}/>}\n            </div>\n        </div>\n\n    )\n}","import {useDispatch} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as UserActionCreators from '../store/action-creators/user'\n\nexport const useActions = () => {\n    const dispatch = useDispatch()\n    return bindActionCreators(UserActionCreators, dispatch)\n}","import {UserAction, UserActionTypes, UserState} from \"../../types/user\";\n\nconst initialState: UserState = {\n    users: [],\n    loading: false,\n    error: null,\n    size: null\n}\n\nexport const userReducer = (state: UserState = initialState, action: UserAction): UserState => {\n    switch (action.type) {\n        case UserActionTypes.FETCH_USERS:\n            return { users: [], loading: true, error: null, size: action.size }\n        case UserActionTypes.FETCH_USERS_SUCCESS:\n            return { users: action.payload, loading: false, error: null, size: action.size }\n        case UserActionTypes.FETCH_USERS_ERROR:\n            return { users: [], loading: false, error: action.payload, size: null }\n        case UserActionTypes.ADD_USER:\n            return { users: [action.payload, ...state.users], loading: false, error: null, size: state.size }\n        case UserActionTypes.SEARCH_USER:\n            return { users: action.payload, loading: false, error: null, size: state.size }\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {userReducer} from \"./userReducer\";\n\nexport const rootReducer = combineReducers({\n    user: userReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {rootReducer} from \"./reducers\";\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from \"./App\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}